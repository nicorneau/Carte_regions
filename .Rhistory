left
right
a <- 5
s <- 2
n <- 20
error <- qnorm(0.975)*s/sqrt(n)
left <- a-error
right <- a+error
left
right
s <- 100
n <- 100
error <- qpois(0.975)*s/sqrt(n)
left <- a-error
right <- a+error
left
right
s <- 100
n <- 100
error <- qpois(0.975, 100)*s/sqrt(n)
left <- a-error
right <- a+error
left
right
error
qnorm(0.975)
a <- 100
error <- qnorm(0.975)*100/sqrt(100)
left <- a-error
right <- a+error
left
right
a <- 100
error <- qnorm(0.975)*1/sqrt(100)
left <- a-error
right <- a+error
left
right
a <- 100
error <- qnorm(0.975)*100/sqrt(1)
left <- a-error
right <- a+error
left
right
a <- 100
error <- qnorm(0.975)*100/sqrt(2)
left <- a-error
right <- a+error
left
right
a <- 100
error <- qnorm(0.975)*100/sqrt(20)
left <- a-error
right <- a+error
left
right
test <- c("Ab", "ac", "ga", "df")
grep("[Aa]", test)
test <- c("Ab", "ac", "ga", "df")
grep("[Aa]b", test)
test <- c("Ab", "ac", "ga", "df")
grep("Ab | ac", test)
grep("Ab" | "ac", test)
test <- c("Ab", "ac", "ga", "df")
grep("Ab ac", test)
grep("Ab-ac", test)
grep("Ab","ac", test)
i <- {grep("Ab", test) | grep("ac", test)}
i
x <- rnorm(100)
f <- seq(0:1, rep = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
x <- rnorm(100)
f <- rep(0:1, rep = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
x <- rnorm(100)
f <- rep(0:1, rep = 50)
f <- factor(f, c("Group 1", "Group 2"))
y <- x + f - f * x + rnorm(100, sd = 0.5)
x <- rnorm(100)
f <- rep(0:1, rep = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, c("Group 1", "Group 2"))
xyplot(y ~ x | f, layout = c(2,1))
library(lattice)
xyplot(y ~ x | f, layout = c(2,1))
library(lattice)
x <- rnorm(100)
f <- rep(0:1, rep = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, c("Group 1", "Group 2"))
xyplot(y ~ x | f, layout = c(2,1))
x
f
f <- rep(0:1, rep = 50)
f
library(lattice)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, c("Group 1", "Group 2"))
xyplot(y ~ x | f, layout = c(2,1))
f
f <- rep(0:1, each = 50)
f
y <- x + f - f * x + rnorm(100, sd = 0.5)
y
f <- factor(f, c("Group 1", "Group 2"))
f
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- as.factor(f, c("Group 1", "Group 2"))
f <- factor(f, c("Group 1", "Group 2"))
f
library(lattice)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group 1", "Group 2"))
xyplot(y ~ x | f, layout = c(2,1))
library(lattice)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group 1", "Group 2"))
t <- xyplot(y ~ x | f, layout = c(2,1))
class(t)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
sum(diet)
sum(Diet)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
install.packages("ggplot2movies")
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
con <- url("http://www.stat.gouv.qc.ca/statistiques/profils/region_00/region_00.htm")
html.code <- readLines(con)
close(con)
html.code
library(XML)
install.packages("XML")
library(XML)
library(XML)
url <- "http://www.stat.gouv.qc.ca/statistiques/profils/region_00/region_00.htm"
html <- htmlTreeParse(url, useInternalNodes = TRUE)
xpathSApply(html, "//title", xmlValue)
html
xpathSApply(html, "//author", xmlValue)
install.packages("rvest")
html_node(//article)
toto <- html("http://www.stat.gouv.qc.ca/statistiques/profils/region_00/region_00.htm")
html_node("//article")
library(rvest)
toto <- html("http://www.stat.gouv.qc.ca/statistiques/profils/region_00/region_00.htm")
html_node("//article")
toto %>%
html_node("//article") %>%
html_text() %>%
as.numeric()
toto %>%
html_node("article") %>%
html_text() %>%
as.numeric()
toto %>%
html_node("article") %>%
html_text()
library(rvest)
toto <- html("http://www.stat.gouv.qc.ca/statistiques/profils/region_01/region_01.htm")
html_node("//article")
toto %>%
html_node("article") %>%
html_text()
toto %>%
html_node("#contenu_centre") %>%
html_text()
library(rvest)
toto <- html("http://www.stat.gouv.qc.ca/statistiques/population-demographie/structure/ra_total.htm")
html_node("td")
library(rvest)
toto <- read_html("http://www.stat.gouv.qc.ca/statistiques/population-demographie/structure/ra_total.htm")
html_node("td")
toto %>%
html_node("td") %>%
html_text()
install.packages("pdftools")
library(pdftools)
install.packages("pdftools")
install.packages(c("dplyr", "foreign", "mapproj", "maps", "Matrix"))
install.packages("pdftools")
?%%
help %%
4 %% 2
5%%2
12%%2
13%%2
12%%3
12%%4
12%%5
14%%4
x <- rep(1:10, 10)
x
x <- rep(1:10, 10)
y <- rnorm(0, 1, 100)
z <- rnorm(o.5, 1, 100)
x <- rep(1:10, 10)
y <- rnorm(0, 1, 100)
z <- rnorm(0.5, 1, 100)
df <- cbind.as.dataframe(x, y, z)
df <- cbind.data.frame(x, y, z)
nrow(x)
length(x)
length(y)
x <- rep(1:10, 10)
y <- rnorm(100, 0, 1)
z <- rnorm(100, 1, 1)
df0 <- cbind.data.frame(x, y)
df1 <- cbind.data.frame(x, z)
head(df0)
head(df1)
mn0 <- with(df0, tapply(y, x, mean))
mn1 <- with(df1, tapply(z, x, mean))
head(mn0)
head(mn1)
df <- merge(mn0, mn1, by = x)
df <- merge(mn0, mn1, by = "x")
names(mn0)
head(mn0)
str(mn0)
summary(mn0)
summary(mn1)
names(df0)
names(df1)
data0 <- data.frame(x = names(x), mn0)
data1 <- data.frame(x = names(x), mn1)
data0 <- data.frame(x = names(mn0), mn0)
data1 <- data.frame(x = names(mn1), mn1)
df <- merge(mn0, mn1, by = "x")
data0
data1
df <- merge(mn0, mn1, by = x)
df <- merge(data0, data1, by = x)
df <- merge(data0, data1, by = "x")
df
x <- 1:10
y <- rnorm(10)
df <- cbind.data.frame(y,x)
attach(df)
x <- 1:10
y <- rnorm(10)
df <- cbind.data.frame(y,x)
names(df) <- c("Ob.1", "Ob.2")
attach(df)
summary(Ob.1)
summary(df$Ob.1)
Ob.2
Ob.1
##packages necessaires
library(dplyr)
library(ggmap)
library(maptools)
library(rgdal)
library(readxl)
library(stringi)
library(scales)
library(pdftools)
library(stringr)
##direction de travail
setwd("/Users/nicot/Documents/github/Carte_regions")
getwd()
#telechargement des donnees demographiques
ifelse(!file.exists("demographie.pdf"),{
url <- "http://www.stat.gouv.qc.ca/statistiques/profils/panorama-regions-2016.pdf"
download.file(url, dest="demographie.pdf", mode="wb")
"file now loaded"},
"file already loaded")
#chargement du fichier ".shp" et transformation de dataframe --> ce fichier est
#disponible au centre GeoStats de la bilbiotheque de l'Universite Laval; ce fichier
#contient de l'information spatial sur les regions adminsitratives du Quebec
shp <- readOGR(dsn = "./regions_admin", layer = "sda_regio_s_poly")
shape <- fortify(shp, region = "RES_CO_REG")
shape$id <- as.integer(shape$id)
#dataframe permettant d'inserer les numeros et noms de regions a la carte
shp.centroids <- data.frame(long = coordinates(shp)[, 1],
lat = coordinates(shp)[, 2])
shp.centroids[, "RES_CO_REG"] <- as.integer(shp@data[,"RES_CO_REG"])
shp.centroids[, "RES_NM_REG"] <- shp@data[,"RES_NM_REG"]
#retrait des doublons de la Cote-Nord
shp.centroids <- shp.centroids[-c(1,2,3,21),]
#ajustement des centres de Laval et Montreal pour une visualisation plus adequate
shp.centroids$lat[shp.centroids$RES_CO_REG==13] <- shp.centroids$lat[shp.centroids$RES_CO_REG==13] + 10000
shp.centroids$long[shp.centroids$RES_CO_REG==13] <- shp.centroids$long[shp.centroids$RES_CO_REG==13] - 19000
shp.centroids$lat[shp.centroids$RES_CO_REG==06] <- shp.centroids$lat[shp.centroids$RES_CO_REG==06] - 15000
shp.centroids$long[shp.centroids$RES_CO_REG==06] <- shp.centroids$long[shp.centroids$RES_CO_REG==06] - 10000
##chargement et traitement du fichier PDF de demographie
texte <- pdf_text("demographie.pdf")
table <- as.data.frame(strsplit(texte[25],"\n"))
table <- as.data.frame(table[c(6,27:43),])
regions <- str_sub(table[,1], start = 1, end = 30)
regions <- as.data.frame(gsub(" ", "", regions))
regions <- regions[-1,]
names(regions) <- "regions.adm"
regions <- gsub("–", "-", regions); regions
age.moyen <- str_sub(table[,1], start= -4)
age.moyen <- as.data.frame(as.numeric(gsub(",", ".", age.moyen)))
age.moyen <- age.moyen[-1,]; age.moyen
names(age.moyen) <- "age.moy"
age.median <- str_sub(table[,1], start = -10, end = -7)
age.median <- as.data.frame(as.numeric(gsub(",", ".", age.median)))
age.median <- age.median[-1,]; age.median
names(age.median) <- "age.med"
prop.65p <- str_sub(table[,1], start = -30, end = -26)
prop.65p <- as.data.frame(as.numeric(gsub(",", ".", prop.65p)))
prop.65p <- prop.65p[-1,]
prop.65p <- prop.65p/100
names(prop.65p) <- "prop.65p"
regions.adm <- cbind.data.frame(num = 1:length(regions), regions, age.moyen, age.median, prop.65p)
#mise en commun des donnees
data <- left_join(x = shape, y = regions.adm,
by = c("id" = "num"),
copy = TRUE)
#carte des regions administratives
pdf("regions_qc.pdf",width=8.5,height=8)
ggplot() +
geom_polygon(data = data, aes(x = long, y = lat,
group = group, fill = prop.65p),
color = "black", size = 0.25) +
scale_fill_distiller(palette = "Blues",
labels = percent,
direction = 1) +
labs(fill = "Proportion") +
scale_x_continuous(limits = c(min(data$long), max(data$long) + 100000))+
theme_nothing(legend = T) +
theme(plot.title = element_text(hjust = 0.5, vjust=-2)) +
ggtitle("Proportion de la population âgée de 65 ans et plus \npar région administrative (2015)") +
geom_text(data = shp.centroids,
aes(label = RES_CO_REG, x = long, y = lat, group = RES_CO_REG), size = 3)+
annotate("text", x=max(data$long)-350000,
y=max(data$lat)-43000*(1:17),
label=paste(unique(data$regions)),
size=3.5, hjust=0) +
annotate("text", x=max(data$long)-350000,
y=max(data$lat)-43000*(1:17),
label=paste(unique(data$id), " : "),
size=3.5, hjust=1) +
annotate("text", x=min(data$long)+350000,
y=min(data$lat+100000),
label="Création de Nicolas Corneau-Tremblay",
size=1.5, hjust=1)
dev.off()
pdf("regions_qc.pdf",width=8.5,height=8)
ggplot() +
geom_polygon(data = data, aes(x = long, y = lat,
group = group, fill = prop.65p),
color = "black", size = 0.25) +
scale_fill_distiller(palette = "Blues",
labels = percent,
direction = 1) +
labs(fill = "Proportion") +
scale_x_continuous(limits = c(min(data$long), max(data$long) + 100000))+
theme_nothing(legend = T) +
theme(plot.title = element_text(hjust = 0.5, vjust=-2)) +
ggtitle("Proportion de la population âgée de 65 ans et plus \npar région administrative (2015)") +
geom_text(data = shp.centroids,
aes(label = RES_CO_REG, x = long, y = lat, group = RES_CO_REG), size = 3)+
annotate("text", x=max(data$long)-350000,
y=max(data$lat)-43000*(1:17),
label=paste(unique(data$regions)),
size=3.5, hjust=0) +
annotate("text", x=max(data$long)-350000,
y=max(data$lat)-43000*(1:17),
label=paste(unique(data$id), " : "),
size=3.5, hjust=1) +
annotate("text", x=max(data$long)-350000,
y=min(data$lat+100000),
label="Création de Nicolas Corneau-Tremblay",
size=2.5, hjust=1)
dev.off()
#carte des regions administratives
pdf("regions_qc.pdf",width=8.5,height=8)
ggplot() +
geom_polygon(data = data, aes(x = long, y = lat,
group = group, fill = prop.65p),
color = "black", size = 0.25) +
scale_fill_distiller(palette = "Blues",
labels = percent,
direction = 1) +
labs(fill = "Proportion") +
scale_x_continuous(limits = c(min(data$long), max(data$long) + 100000))+
theme_nothing(legend = T) +
theme(plot.title = element_text(hjust = 0.5, vjust=-2)) +
ggtitle("Proportion de la population âgée de 65 ans et plus \npar région administrative (2015)") +
geom_text(data = shp.centroids,
aes(label = RES_CO_REG, x = long, y = lat, group = RES_CO_REG), size = 3)+
annotate("text", x=max(data$long)-350000,
y=max(data$lat)-43000*(1:17),
label=paste(unique(data$regions)),
size=3.5, hjust=0) +
annotate("text", x=max(data$long)-350000,
y=max(data$lat)-43000*(1:17),
label=paste(unique(data$id), " : "),
size=3.5, hjust=1) +
annotate("text", x=max(data$long)-50000,
y=min(data$lat+100000),
label="Création de Nicolas Corneau-Tremblay",
size=3, hjust=1)
dev.off()
pdf("regions_qc.pdf",width=8.5,height=8)
ggplot() +
geom_polygon(data = data, aes(x = long, y = lat,
group = group, fill = prop.65p),
color = "black", size = 0.25) +
scale_fill_distiller(palette = "Blues",
labels = percent,
direction = 1) +
labs(fill = "Proportion") +
scale_x_continuous(limits = c(min(data$long), max(data$long) + 100000))+
theme_nothing(legend = T) +
theme(plot.title = element_text(hjust = 0.5, vjust=-2)) +
ggtitle("Proportion de la population âgée de 65 ans et plus \npar région administrative (2015)") +
geom_text(data = shp.centroids,
aes(label = RES_CO_REG, x = long, y = lat, group = RES_CO_REG), size = 3)+
annotate("text", x=max(data$long)-350000,
y=max(data$lat)-43000*(1:17),
label=paste(unique(data$regions)),
size=3.5, hjust=0) +
annotate("text", x=max(data$long)-350000,
y=max(data$lat)-43000*(1:17),
label=paste(unique(data$id), " : "),
size=3.5, hjust=1) +
annotate("text", x=max(data$long)-40000,
y=min(data$lat+20000),
label="Création de Nicolas Corneau-Tremblay",
size=3, hjust=1)
dev.off()
pdf("regions_qc.pdf",width=8.5,height=8)
ggplot() +
geom_polygon(data = data, aes(x = long, y = lat,
group = group, fill = prop.65p),
color = "black", size = 0.25) +
scale_fill_distiller(palette = "Blues",
labels = percent,
direction = 1) +
labs(fill = "Proportion") +
scale_x_continuous(limits = c(min(data$long), max(data$long) + 100000))+
theme_nothing(legend = T) +
theme(plot.title = element_text(hjust = 0.5, vjust=-2)) +
ggtitle("Proportion de la population âgée de 65 ans et plus \npar région administrative (2015)") +
geom_text(data = shp.centroids,
aes(label = RES_CO_REG, x = long, y = lat, group = RES_CO_REG), size = 3)+
annotate("text", x=max(data$long)-350000,
y=max(data$lat)-43000*(1:17),
label=paste(unique(data$regions)),
size=3.5, hjust=0) +
annotate("text", x=max(data$long)-350000,
y=max(data$lat)-43000*(1:17),
label=paste(unique(data$id), " : "),
size=3.5, hjust=1) +
annotate("text", x=max(data$long)-40000,
y=min(data$lat+20000),
label="Création de Nicolas Corneau-Tremblay",
size=3, hjust=1, color = "grey")
dev.off()
#carte des regions administratives
pdf("regions_qc.pdf",width=8.5,height=8)
ggplot() +
geom_polygon(data = data, aes(x = long, y = lat,
group = group, fill = prop.65p),
color = "black", size = 0.25) +
scale_fill_distiller(palette = "Blues",
labels = percent,
direction = 1) +
labs(fill = "Proportion") +
scale_x_continuous(limits = c(min(data$long), max(data$long) + 100000))+
theme_nothing(legend = T) +
theme(plot.title = element_text(hjust = 0.5, vjust=-2)) +
ggtitle("Proportion de la population âgée de 65 ans et plus \npar région administrative (2015)") +
geom_text(data = shp.centroids,
aes(label = RES_CO_REG, x = long, y = lat, group = RES_CO_REG), size = 3)+
annotate("text", x=max(data$long)-350000,
y=max(data$lat)-43000*(1:17),
label=paste(unique(data$regions)),
size=3.5, hjust=0) +
annotate("text", x=max(data$long)-350000,
y=max(data$lat)-43000*(1:17),
label=paste(unique(data$id), " : "),
size=3.5, hjust=1) +
annotate("text", x=max(data$long)-40000,
y=min(data$lat+20000),
label="Création de Nicolas Corneau-Tremblay",
size=3, hjust=1)
dev.off()
